/*1. If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.
Ans: 233168 */

public class first {
    public static void main (String [] args) {
        int i,s=0,n=1000;
        for(i=0;i<1000;i++){
            if((i % 3 == 0) || (i % 5 == 0)){
                s += i;
            }
        }
        System.out.println(s);
    }
}


/* 2. Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
Ans: 4613732 */

public class second {
    public static void main(String[] args) {
        int num1 = 0, num2 = 1, x = 0, sum = 0;
        do {
            if (num2 % 2 == 0) {
                sum = sum + num2;
            }
            x = num1 + num2;
            num1 = num2;
            num2 = x;
        } while (num2 < 4000000);
        System.out.println(sum);
    }
}


/* 3. The prime factors of 13195 are 5, 7, 13 and 29. What is the largest prime factor of the number 600851475143?
Ans: 6857 */

public class third {
    public static void main(String[] args) {
        long HT = 600851475143L;
        long i = 2;
        while (true) {
            long temp = HT / i;
            if ((HT % temp == 0) && (isPrime(temp))) {
                System.out.println(temp);
                break;
            }
            i++;
        }
    }

    public static boolean isPrime(long num) {
        for (int i = 3; i <= Math.sqrt(num); i++) {
            if (num % i == 0)
                return false;
        }
        return true;
    }
}


/* 4. A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.Find the largest palindrome made from the product
of two 3-digit numbers.
Ans: 906609 */

public class four {
    public static void main(String[] args) {
        int max = -1;
        for (int i = 999; i >= 100; i--) {
            for (int j = 999; j >= 100; j--) {
                int p = i * j;
                if (max < p && isPalindrome(p)) {
                    max = p;
                }
            }
        }
        System.out.println(max > -1 ? max : "No palindrome found");
    }

    public static boolean isPalindrome(int nr) {
        int rev = 0;
        int x = nr;
        while (x > 0) {
            rev = 10 * rev + x % 10;
            x /= 10;
        }
        return nr == rev;
    }


/* 5. 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.What is the smallest positive number that is evenly divisible by all 
of the numbers from 1 to 20?
Ans: 232792560
 */

public class five {
    public static void main(String[] args) {
        final int start = 3, step = 20;
        for (int i = step;; i += step) {
            boolean allValues = true;
            for (int k = start; k < step; k++) {
                if (i % k != 0) {
                    allValues = false;
                    break;
                }
            }
            if (allValues) {
                System.out.println(i);
                break;
            }
        }

    }
}


/*6. The sum of the squares of the first ten natural numbers is, 1^2+2^2+3^2 … + 10^2 = 385 The square of the sum of the first ten natural numbers is, (1 + 2 + 3 + … + 10)^2 = 3025
Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 - 385 = 2640. Find the difference between the sum of the squares 
of the first one hundred natural numbers and the square of the sum.
Ans: 25164150*/

public class six {
    public static void main(String[] args) {
        long sum1 = 0, sum2 = 0;
        for (int i = 1; i <= 100; i++) {
            sum1 += (i * i);
            sum2 += i;
        }
        sum2 *= sum2;
        System.out.print(sum2 - sum1);
    }
}


/* 7. By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13. What is the 10,001st prime number?
Ans: 104743 */

public class seven {
    public static void main(String[] args) {
        final int n = 10001;
        int numPrimes = 1, num = 1;
        while (numPrimes < n) {
            num += 2;
            numPrimes += (isPrime(num)) ? 1 : 0;
        }
        System.out.println(num);
    }

    public static boolean isPrime(int num) {
        for (int i = 3; i <= Math.sqrt(num); i += 2) {
            if (num % i == 0)
                return false;
        }
        return true;
    }
}


/* 9. A Pythagorean triplet is a set of three natural numbers, a < b < c, for which, a^2 + b^2 = c^2 .For example, 3^2 + 4^2 = 9 + 16 = 25 = 5^2. There exists exactly one Pythagorean 
triplet for which a + b + c = 1000. Find the product abc.
Ans: 31875000 */

public class nine {
    public static void main(String[] args) {
        int sum = 1000;
        for (int a = 2; a < sum; a++) {
            for (int b = 1; b < a; b++) {
                int c = sum - (a + b);
                if ((a * a) + (b * b) == (c * c)) {
                    System.out.println(a * b * c);
                }
            }
        }
    }
}


/* 10. The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17. Find the sum of all the primes below two million.
Ans: 142913828922 */

public class ten {
    public static void main(String[] args) {
        final int n = 20000000;
        long sum = 2;
        for (int i = 3; i < n; i += 2) {
            sum += (isPrime(i)) ? 1 : 0;
        }
        System.out.println(sum);
    }

    public static boolean isPrime(int num) {
        for (int i = 3; i <= Math.sqrt(num); i++) {
            if (num % i == 0)
                return false;
        }
        return true;
    }
}


/* 16. 2^15 = 32768 and the sum of its digits is 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of the number 2^1000?
Ans: 1366 */

public class sixteen {
    public static void main(String[] args) {
        long base = 2, power = 15;
        long result = 1;
        while (power != 0) {
            result *= base;
            power--;
        }
        long sum = 0;
        while (result > 0) {
            sum += (result % 10);
            result /= 10;
        }
        System.out.println(sum);
    }
}


/* 20. n! means n × (n − 1) × ... × 3 × 2 × 1 .For example, 10! = 10 × 9 × ... × 3 × 2 × 1 = 3628800, and the sum of the digits in the number 10! is 3 + 6 + 2 + 8 + 8 + 0 + 0 = 27.
Find the sum of the digits in the number 100!
Ans: 648 */

public class twenty {
    public static void main(String[] args) {
        long fac = 1;
        for (long i = 10; i > 1; i--) {

            fac *= i;
        }

        long sum = 0;
        while (fac > 0) {
            sum += (fac % 10);
            fac /= 10;
        }
        System.out.print(sum);
    }
}


}